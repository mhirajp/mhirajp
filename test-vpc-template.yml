AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template with VPC, Internet Gateway, Private Subnet, NAT Gateway, and EC2 instance

Parameters:
  VpcCidr:
    Description: CIDR block for the VPC
    Type: String
    Default: '10.0.0.0/16'
  PrivateSubnetCidr:
    Description: CIDR block for the private subnet
    Type: String
    Default: '10.0.1.0/24'
  PublicSubnetCidr:
    Description: CIDR block for the public subnet
    Type: String
    Default: '10.0.2.0/24'

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidr

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NatGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for EC2 instances
      VpcId: !Ref MyVPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

      
  MyFlowLogs:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !ImportValue test-vpc-iam-FlowLogsRoleArn
      LogGroupName: MyFlowLogs
      ResourceId: !Ref MyVPC
      ResourceType: VPC
      TrafficType: ALL

Outputs:
  VpcId:
    Value: !Ref MyVPC
  InternetGatewayId:
    Value: !Ref InternetGateway
  PrivateSubnetId:
    Value: !Ref PrivateSubnet
    Export:
      Name: test-vpc-PrivateSubnet
  MySecurityGroup:
    Value: !Ref MySecurityGroup
    Export:
      Name: test-vpc-MySecurityGroup
